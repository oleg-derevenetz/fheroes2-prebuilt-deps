name: Windows

on:
  workflow_call:

env:
  VCPKG_REPO: oleg-derevenetz/vcpkg
  # 19.07.2022
  VCPKG_REF: fluidsynth-2.2.8

jobs:
  sdl1:
    name: Create SDL1 package
    runs-on: windows-2019
    timeout-minutes: 10
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: Create a package directory
      run: |
        mkdir -p .output/sdl1
    - name: Download binary packages
      run: |
        windows/sdl1.bat .output/sdl1
    - uses: actions/upload-artifact@v2
      with:
        name: sdl1
        path: .output/sdl1
        if-no-files-found: error
  sdl2:
    strategy:
      matrix:
        arch: [x86, x64]
    name: Create SDL2 ${{ matrix.arch }} package
    runs-on: windows-2019
    timeout-minutes: 120
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: Create a package directory
      run: |
        mkdir -p .output/sdl2
    - name: Prepare vcpkg cache
      uses: actions/cache@v3
      with:
        path: ~/AppData/Local/vcpkg/archives
        key: windows-sdl2-vcpkg-cache-${{ matrix.arch }}-${{ env.VCPKG_REF }}-${{ github.sha }}
        restore-keys: |
          windows-sdl2-vcpkg-cache-${{ matrix.arch }}-${{ env.VCPKG_REF }}-
          windows-sdl2-vcpkg-cache-${{ matrix.arch }}-
    - uses: actions/checkout@v3
      with:
        repository: ${{ env.VCPKG_REPO }}
        ref: ${{ env.VCPKG_REF }}
        path: .vcpkg
    - name: Bootstrap vcpkg
      run: |
        .vcpkg/bootstrap-vcpkg.bat
    - name: Build
      run: |
        windows/sdl2.bat .vcpkg ${{ matrix.arch }} .output/sdl2
    - name: Get a list of files installed by vcpkg
      if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
      run: |
        ls -lR .vcpkg/installed > .vcpkg/installed_files.txt
    - uses: actions/upload-artifact@v2
      if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
      with:
        name: sdl2-${{ matrix.arch }}-vcpkg-installed-files
        path: .vcpkg/installed_files.txt
    - uses: actions/upload-artifact@v2
      with:
        name: sdl2-${{ matrix.arch }}
        path: .output/sdl2
        if-no-files-found: error
  zlib:
    strategy:
      matrix:
        arch: [x86, x64]
    name: Create zlib ${{ matrix.arch }} package
    runs-on: windows-2019
    timeout-minutes: 30
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: Create a package directory
      run: |
        mkdir -p .output/zlib
    - name: Prepare vcpkg cache
      uses: actions/cache@v3
      with:
        path: ~/AppData/Local/vcpkg/archives
        key: windows-zlib-vcpkg-cache-${{ matrix.arch }}-${{ env.VCPKG_REF }}-${{ github.sha }}
        restore-keys: |
          windows-zlib-vcpkg-cache-${{ matrix.arch }}-${{ env.VCPKG_REF }}-
          windows-zlib-vcpkg-cache-${{ matrix.arch }}-
    - uses: actions/checkout@v3
      with:
        repository: ${{ env.VCPKG_REPO }}
        ref: ${{ env.VCPKG_REF }}
        path: .vcpkg
    - name: Bootstrap vcpkg
      run: |
        .vcpkg/bootstrap-vcpkg.bat
    - name: Build
      run: |
        windows/zlib.bat .vcpkg ${{ matrix.arch }} .output/zlib
    - name: Get a list of files installed by vcpkg
      if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
      run: |
        ls -lR .vcpkg/installed > .vcpkg/installed_files.txt
    - uses: actions/upload-artifact@v2
      if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
      with:
        name: zlib-${{ matrix.arch }}-vcpkg-installed-files
        path: .vcpkg/installed_files.txt
    - uses: actions/upload-artifact@v2
      with:
        name: zlib-${{ matrix.arch }}
        path: .output/zlib
        if-no-files-found: error
  merge:
    name: Merge and upload package
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [sdl1, sdl2, zlib]
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: sdl1
        path: .output/sdl1
    - uses: actions/download-artifact@v2
      with:
        name: sdl2-x86
        path: .output/sdl2
    - uses: actions/download-artifact@v2
      with:
        name: sdl2-x64
        path: .output/sdl2
    - uses: actions/download-artifact@v2
      with:
        name: zlib-x86
        path: .output/sdl1
    - uses: actions/download-artifact@v2
      with:
        name: zlib-x64
        path: .output/sdl1
    - uses: actions/upload-artifact@v2
      if: ${{ github.event_name == 'pull_request' }}
      with:
        name: windows
        path: .output
        if-no-files-found: error
    - name: Create a combined package
      if: ${{ github.event_name == 'push' }}
      run: |
        cd .output
        zip -r windows.zip sdl1 sdl2
    - uses: ncipollo/release-action@v1
      if: ${{ github.event_name == 'push' }}
      with:
        artifacts: .output/windows.zip
        body: This is a pre-built dependency package for the fheroes2 build for Windows
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Pre-built dependency package for Windows build
        tag: windows-deps
        allowUpdates: true
        artifactErrorsFailBuild: true
        replacesArtifacts: true
